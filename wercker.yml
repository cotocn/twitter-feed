#Use OpenJDK base docker image from dockerhub and open the application port on the docker container
box:
  id: openjdk:8
  ports:
    - 8080

#Build our application using Maven, just as we always have
build:
  steps:
    - install-packages:
        packages: maven
    - script:
        name: maven build
        code: mvn clean assembly:assembly
        
#Push the docker image with our built and tested application to Docker Hub
push-release:
  steps:
    - internal/docker-push:
        username: $REGISTRY_USERNAME
        password: $REGISTRY_PASSWORD
        repository: phx.ocir.io/oscjapac002/demo/twitter-feed
#        registry: $DOCKER_REGISTRY
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        working-dir: /pipeline/source
        ports: 8080
        env: PORT=8080
        cmd: sh target/bin/start

#Deploy our container from the Docker Hub to Kubernetes
deploy-to-cluster:
    box:
        id: alpine
        cmd: /bin/sh
    steps:

    - bash-template

    - script:
        name: "Visualise Kubernetes config"
        code: cat kubernetes.yml.template

    - kubectl:
        name: deploy to kubernetes
        server: $KUBERNETES_MASTER
        #username: $KUBERNETES_USERNAME
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f kubernetes.yml.template
